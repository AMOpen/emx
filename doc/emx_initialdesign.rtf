{\rtf1\ansi\ansicpg1252\cocoartf949\cocoasubrtf430
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ql\qnatural\pardirnatural

\f0\fs24 \cf0 EMX Design\
\
Like MX but written in Erlang and with all of the things MX should have.\
\
1. Documents have a display name and content\
2. The display name is of the form "protocol"/type/information specifc to type\
3. Types have the following information associated with them\
	Display name format (how many, what is each one called)\
	Whether it has an autoid\
	Whether the type should be versioned\
	What indexes should be applied to the type\
	Their name\
	The latest object id\
4. Types are stored in their own set of mnesia databases, one for the header, one for the content.\
	The header has the following\
		ObjectId, displayname, latestversion\
          The content has the following\
		Object id, version, content, writeTime, writeUser\
\
	A write of a new document:\
		1. Finds the existing document from the header.\
		2. Stores content in the content table, updating the version number\
		3. Increment (or write) the header entry\
		(Depending on config of type), remove the previous version.\
\
5. An index is a table of standard form\
		TypeName, ObjectId, Version, Content\
6. An index has a definition\
		Name?\
7. An index has a set of rules associated with it\
	FieldName (the atom it will generate)\
	Either Xml XPath or Position in DisplayName\
8. A type can be associated with an index - specifying the parent xpath.\
\
9. So, when a document is written, the indices associated with the type are enumerated and each field associated with an index is evaluated against the document, generating a new entry which will be placed in the index table for that type.\
\
10. Loading documents\
		Given a display name, locate in the header table for the type, get the version and load the content, returning that.\
11. Querying for a document\
		Pass in a query defined in terms of indices - find appropriate unions of valid data and return it (or other aspects of the matching documents)\
\
12. Subscriptions/queues - handle queues based on matching queries on the document and the results of its index (like the query).\
\
}